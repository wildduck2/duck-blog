[
  {
    "body": "const{Fragment:n,jsx:e,jsxs:t}=arguments[0];function _createMdxContent(a){const c={a:\"a\",h2:\"h2\",p:\"p\",span:\"span\",...a.components};return t(n,{children:[t(c.h2,{id:\"what-is-acme\",children:[e(c.a,{\"aria-label\":\"Link to section\",className:\"subheading-anchor\",href:\"#what-is-acme\",children:e(c.span,{className:\"icon icon-link\"})}),\"What is @acme?\"]}),\"\\n\",e(c.p,{children:\"this is test file\"})]})}return{default:function(n={}){const{wrapper:t}=n.components||{};return t?e(t,{...n,children:e(_createMdxContent,{...n})}):_createMdxContent(n)}};",
    "component": false,
    "content": "<h2>What is @acme?</h2>\n<p>this is test file</p>",
    "description": "intreduce you lib here",
    "excerpt": "What is @acme?\nthis is test file",
    "metadata": {
      "readingTime": 1,
      "wordCount": 7
    },
    "title": "introduction",
    "toc": [
      {
        "title": "What is @acme?",
        "url": "#what-is-acme",
        "items": []
      }
    ],
    "contentType": "mdx",
    "flattenedPath": "docs",
    "permalink": "index",
    "slug": "docs/index",
    "sourceFileDir": "content/docs",
    "sourceFileName": "index.mdx",
    "sourceFilePath": []
  },
  {
    "body": "const{Fragment:e,jsx:n,jsxs:i}=arguments[0];function _createMdxContent(r){const t={a:\"a\",br:\"br\",em:\"em\",h2:\"h2\",h3:\"h3\",hr:\"hr\",li:\"li\",p:\"p\",span:\"span\",strong:\"strong\",ul:\"ul\",...r.components};return i(e,{children:[i(t.h2,{id:\"about-me\",children:[n(t.a,{\"aria-label\":\"Link to section\",className:\"subheading-anchor\",href:\"#about-me\",children:n(t.span,{className:\"icon icon-link\"})}),\"About Me\"]}),\"\\n\",n(\"a\",{href:\"https://github.com/wildduck2\",target:\"_blank\",rel:\"noreferrer\",children:n(\"img\",{src:\"https://github.com/wildduck2.png\",alt:\"wildduck2\",width:\"300\",height:\"300\",className:\"rounded-xl object-cover mt-4 border border-border\"})}),\"\\n\",i(t.p,{children:[\"I'm a \",n(t.strong,{children:\"Senior Software Engineer\"}),\" specializing in building scalable, high-performance systems across the full stack. Currently at AIv, I'm engineering conversational operating systems where natural language serves as the interface for real-world actions. I work with \",n(t.strong,{children:\"TypeScript\"}),\", \",n(t.strong,{children:\"Rust\"}),\", \",n(t.strong,{children:\"Elixir\"}),\", \",n(t.strong,{children:\"Node.js\"}),\", and modern web technologies to create robust, production-grade applications.\"]}),\"\\n\",i(t.p,{children:[\"My expertise spans from \",n(t.strong,{children:\"zero-dependency libraries\"}),\" and \",n(t.strong,{children:\"Rust-powered tooling\"}),\" to \",n(t.strong,{children:\"AI-driven architectures\"}),\" and \",n(t.strong,{children:\"distributed systems\"}),\". I'm passionate about creating developer tools that improve productivity, reduce complexity, and push the boundaries of what's possible with modern web technologies.\"]}),\"\\n\",n(t.hr,{}),\"\\n\",i(t.h2,{id:\"featured-projects\",children:[n(t.a,{\"aria-label\":\"Link to section\",className:\"subheading-anchor\",href:\"#featured-projects\",children:n(t.span,{className:\"icon icon-link\"})}),\"Featured Projects\"]}),\"\\n\",i(t.h3,{id:\"getnleduckui\",children:[n(t.a,{\"aria-label\":\"Link to section\",className:\"subheading-anchor\",href:\"#getnleduckui\",children:n(t.span,{className:\"icon icon-link\"})}),n(t.a,{href:\"https://github.com/gentleeduck/duck-ui\",children:\"@getnleduck/ui\"})]}),\"\\n\",n(t.p,{children:n(t.strong,{children:\"React + TypeScript Component Library\"})}),\"\\n\",n(t.p,{children:\"A dependency-free, themeable design system built from scratch—no Radix, no external UI frameworks. duck-ui delivers:\"}),\"\\n\",i(t.ul,{children:[\"\\n\",i(t.li,{children:[n(t.strong,{children:\"2× performance improvement\"}),\" in bundle size and runtime vs. common alternatives\"]}),\"\\n\",n(t.li,{children:\"Compact, accessible components with modern UX patterns\"}),\"\\n\",n(t.li,{children:\"Composable primitives with comprehensive documentation\"}),\"\\n\",n(t.li,{children:\"Production-ready UI that enforces consistency across products\"}),\"\\n\"]}),\"\\n\",i(t.p,{children:[n(t.strong,{children:\"Tech Stack:\"}),\" React, TypeScript, TailwindCSS\",n(t.br,{}),\"\\n\",n(t.strong,{children:\"Impact:\"}),\" Accelerates developer onboarding and delivers enterprise-grade UI systems\"]}),\"\\n\",n(t.hr,{}),\"\\n\",i(t.h3,{id:\"getnleduckttlog\",children:[n(t.a,{\"aria-label\":\"Link to section\",className:\"subheading-anchor\",href:\"#getnleduckttlog\",children:n(t.span,{className:\"icon icon-link\"})}),n(t.a,{href:\"https://github.com/gentleeduck/duck-ttlog\",children:\"@getnleduck/ttlog\"})]}),\"\\n\",n(t.p,{children:n(t.strong,{children:\"Production-Grade Rust Logging Engine\"})}),\"\\n\",n(t.p,{children:\"A high-performance logging system for distributed applications featuring:\"}),\"\\n\",i(t.ul,{children:[\"\\n\",i(t.li,{children:[n(t.strong,{children:\"Lock-free ring buffers\"}),\" for non-blocking ingestion\"]}),\"\\n\",i(t.li,{children:[n(t.strong,{children:\"CBOR + LZ4\"}),\" compressed snapshots with atomic file writes\"]}),\"\\n\",i(t.li,{children:[n(t.strong,{children:\"Crash-capture\"}),\" and post-mortem analysis without runtime impact\"]}),\"\\n\",i(t.li,{children:[\"Benchmarked at \",n(t.strong,{children:\"~70M events/sec\"}),\" peak and \",n(t.strong,{children:\"~16.7M buffer ops/sec\"})]}),\"\\n\"]}),\"\\n\",i(t.p,{children:[n(t.strong,{children:\"Tech Stack:\"}),\" Rust\",n(t.br,{}),\"\\n\",n(t.strong,{children:\"Use Case:\"}),\" Extreme throughput scenarios requiring reliable diagnostics at scale\"]}),\"\\n\",n(t.hr,{}),\"\\n\",i(t.h3,{id:\"getnleducktemplate\",children:[n(t.a,{\"aria-label\":\"Link to section\",className:\"subheading-anchor\",href:\"#getnleducktemplate\",children:n(t.span,{className:\"icon icon-link\"})}),n(t.a,{href:\"https://github.com/gentleeduck/duck-template\",children:\"@getnleduck/template\"})]}),\"\\n\",n(t.p,{children:n(t.strong,{children:\"Fast Rust-Powered Scaffolding CLI\"})}),\"\\n\",n(t.p,{children:\"A project scaffolding tool driven by structured JSON configs:\"}),\"\\n\",i(t.ul,{children:[\"\\n\",n(t.li,{children:\"Variant support with remote/local config sources\"}),\"\\n\",n(t.li,{children:\"Dynamic flag injection and modular commands\"}),\"\\n\",n(t.li,{children:\"Reproducible, environment-aware project layouts\"}),\"\\n\",i(t.li,{children:[n(t.strong,{children:\"Dramatically reduces\"}),\" developer setup time\"]}),\"\\n\"]}),\"\\n\",i(t.p,{children:[n(t.strong,{children:\"Tech Stack:\"}),\" Rust\",n(t.br,{}),\"\\n\",n(t.strong,{children:\"Purpose:\"}),\" Standardize bootstrapping across teams\"]}),\"\\n\",n(t.hr,{}),\"\\n\",i(t.h3,{id:\"gentleduckttest\",children:[n(t.a,{\"aria-label\":\"Link to section\",className:\"subheading-anchor\",href:\"#gentleduckttest\",children:n(t.span,{className:\"icon icon-link\"})}),n(t.a,{href:\"https://www.npmjs.com/package/@gentleduck/ttest\",children:\"@gentleduck/ttest\"})]}),\"\\n\",n(t.p,{children:n(t.strong,{children:\"Zero-Runtime TypeScript Type Testing\"})}),\"\\n\",n(t.p,{children:\"A compile-time type-level testing framework for TypeScript:\"}),\"\\n\",i(t.ul,{children:[\"\\n\",n(t.li,{children:\"Validates assignability, equality, and inference without emitted JS\"}),\"\\n\",n(t.li,{children:\"Clear, IDE-friendly failure messages\"}),\"\\n\",n(t.li,{children:\"Includes advanced type-only utilities (SQL & JSON inference/parsers)\"}),\"\\n\",n(t.li,{children:\"Perfect for framework authors and type-heavy codebases\"}),\"\\n\"]}),\"\\n\",i(t.p,{children:[n(t.strong,{children:\"Tech Stack:\"}),\" TypeScript\",n(t.br,{}),\"\\n\",n(t.strong,{children:\"Highlight:\"}),\" Closes the feedback loop between complex types and application logic\"]}),\"\\n\",n(t.hr,{}),\"\\n\",i(t.h3,{id:\"gentleduckvariants\",children:[n(t.a,{\"aria-label\":\"Link to section\",className:\"subheading-anchor\",href:\"#gentleduckvariants\",children:n(t.span,{className:\"icon icon-link\"})}),n(t.a,{href:\"https://www.npmjs.com/package/@gentleduck/variants\",children:\"@gentleduck/variants\"})]}),\"\\n\",n(t.p,{children:n(t.strong,{children:\"Zero-Dependency Class Composition Utility\"})}),\"\\n\",n(t.p,{children:\"A TypeScript-first utility for declarative class-name composition:\"}),\"\\n\",i(t.ul,{children:[\"\\n\",i(t.li,{children:[n(t.strong,{children:\"~7× faster\"}),\" than reference implementations\"]}),\"\\n\",n(t.li,{children:\"Fully type-safe with IDE autocompletion\"}),\"\\n\",n(t.li,{children:\"Supports default & compound variants, nested arrays, conditionals\"}),\"\\n\",n(t.li,{children:\"Tiny bundle footprint\"}),\"\\n\"]}),\"\\n\",i(t.p,{children:[n(t.strong,{children:\"Tech Stack:\"}),\" TypeScript\",n(t.br,{}),\"\\n\",n(t.strong,{children:\"Inspired by:\"}),\" Tailwind/CVA\"]}),\"\\n\",n(t.hr,{}),\"\\n\",i(t.h3,{id:\"gentleduckvim\",children:[n(t.a,{\"aria-label\":\"Link to section\",className:\"subheading-anchor\",href:\"#gentleduckvim\",children:n(t.span,{className:\"icon icon-link\"})}),n(t.a,{href:\"https://www.npmjs.com/package/@gentleduck/vim\",children:\"@gentleduck/vim\"})]}),\"\\n\",n(t.p,{children:n(t.strong,{children:\"Framework-Agnostic Vim-Style Navigation\"})}),\"\\n\",n(t.p,{children:\"Transform any browser app into a modal, keyboard-first experience:\"}),\"\\n\",i(t.ul,{children:[\"\\n\",n(t.li,{children:\"Declarative keymaps with leader-key and chord support\"}),\"\\n\",n(t.li,{children:\"Modal editing (normal/insert/visual) with rich motion primitives\"}),\"\\n\",n(t.li,{children:\"Framework adapters for React/Angular/Svelte/vanilla\"}),\"\\n\",n(t.li,{children:\"Accessibility-friendly fallbacks\"}),\"\\n\"]}),\"\\n\",i(t.p,{children:[n(t.strong,{children:\"Tech Stack:\"}),\" TypeScript\",n(t.br,{}),\"\\n\",n(t.strong,{children:\"Purpose:\"}),\" Add muscle-memory navigation and power-user workflows to any UI\"]}),\"\\n\",n(t.hr,{}),\"\\n\",i(t.h3,{id:\"-duck-lox-rs--still-in-development\",children:[n(t.a,{\"aria-label\":\"Link to section\",className:\"subheading-anchor\",href:\"#-duck-lox-rs--still-in-development\",children:n(t.span,{className:\"icon icon-link\"})}),n(t.a,{href:\"https://github.com/wildduck2/-duck-lox-rs-\",children:\"-duck-lox-rs-\"}),\" (STILL IN DEVELOPMENT)\"]}),\"\\n\",n(t.p,{children:n(t.strong,{children:\"Lox Language Interpreter in Rust\"})}),\"\\n\",n(t.p,{children:\"A tree-walk interpreter implementation of the Lox programming language:\"}),\"\\n\",i(t.ul,{children:[\"\\n\",n(t.li,{children:'Built following \"Crafting Interpreters\" principles'}),\"\\n\",n(t.li,{children:\"Demonstrates Rust's capabilities in language implementation\"}),\"\\n\",n(t.li,{children:\"Clean, educational codebase\"}),\"\\n\"]}),\"\\n\",i(t.p,{children:[n(t.strong,{children:\"Tech Stack:\"}),\" Rust\"]}),\"\\n\",n(t.hr,{}),\"\\n\",i(t.h3,{id:\"ahmedayobemail-toolkit\",children:[n(t.a,{\"aria-label\":\"Link to section\",className:\"subheading-anchor\",href:\"#ahmedayobemail-toolkit\",children:n(t.span,{className:\"icon icon-link\"})}),n(t.a,{href:\"https://github.com/wildduck2/email-toolkit\",children:\"@ahmedayob/email-toolkit\"})]}),\"\\n\",n(t.p,{children:n(t.strong,{children:\"MIME Message Builder Library\"})}),\"\\n\",n(t.p,{children:\"A TypeScript library for building and manipulating MIME messages:\"}),\"\\n\",i(t.ul,{children:[\"\\n\",n(t.li,{children:\"Easy-to-use API for creating and encoding MIME content\"}),\"\\n\",n(t.li,{children:\"Ideal for email and internet-based communication systems\"}),\"\\n\",n(t.li,{children:\"Type-safe implementation\"}),\"\\n\"]}),\"\\n\",i(t.p,{children:[n(t.strong,{children:\"Tech Stack:\"}),\" TypeScript\"]}),\"\\n\",n(t.hr,{}),\"\\n\",i(t.h2,{id:\"philosophy\",children:[n(t.a,{\"aria-label\":\"Link to section\",className:\"subheading-anchor\",href:\"#philosophy\",children:n(t.span,{className:\"icon icon-link\"})}),\"Philosophy\"]}),\"\\n\",i(t.p,{children:[\"I believe in building tools that \",n(t.strong,{children:\"reduce complexity\"}),\" while \",n(t.strong,{children:\"expanding capability\"}),\". Whether it's a zero-dependency component library, a crash-proof logging system, or an AI-powered operating system, my goal is to create software that empowers developers and users alike.\"]}),\"\\n\",n(t.p,{children:\"My work focuses on:\"}),\"\\n\",i(t.ul,{children:[\"\\n\",i(t.li,{children:[n(t.strong,{children:\"Performance:\"}),\" Every millisecond matters in production\"]}),\"\\n\",i(t.li,{children:[n(t.strong,{children:\"Developer Experience:\"}),\" Great tools make great products possible\"]}),\"\\n\",i(t.li,{children:[n(t.strong,{children:\"Type Safety:\"}),\" Catching errors at compile time, not runtime\"]}),\"\\n\",i(t.li,{children:[n(t.strong,{children:\"Open Source:\"}),\" Sharing knowledge and building in public\"]}),\"\\n\"]}),\"\\n\",n(t.hr,{}),\"\\n\",n(t.p,{children:n(t.em,{children:'\"Between the kernel and eBPF\" — Building the future of developer tools and distributed systems.'})})]})}return{default:function(e={}){const{wrapper:i}=e.components||{};return i?n(i,{...e,children:n(_createMdxContent,{...e})}):_createMdxContent(e)}};",
    "component": false,
    "content": "<h2>About Me</h2>\n<a href=\"https://github.com/wildduck2\" target=\"_blank\" rel=\"noreferrer\">\n  <img src=\"https://github.com/wildduck2.png\" alt=\"wildduck2\" width=\"300\" height=\"300\" class=\"rounded-xl object-cover mt-4 border border-border\">\n</a>\n<p>I'm a <strong>Senior Software Engineer</strong> specializing in building scalable, high-performance systems across the full stack. Currently at AIv, I'm engineering conversational operating systems where natural language serves as the interface for real-world actions. I work with <strong>TypeScript</strong>, <strong>Rust</strong>, <strong>Elixir</strong>, <strong>Node.js</strong>, and modern web technologies to create robust, production-grade applications.</p>\n<p>My expertise spans from <strong>zero-dependency libraries</strong> and <strong>Rust-powered tooling</strong> to <strong>AI-driven architectures</strong> and <strong>distributed systems</strong>. I'm passionate about creating developer tools that improve productivity, reduce complexity, and push the boundaries of what's possible with modern web technologies.</p>\n<hr>\n<h2>Featured Projects</h2>\n<h3><a href=\"https://github.com/gentleeduck/duck-ui\">@getnleduck/ui</a></h3>\n<p><strong>React + TypeScript Component Library</strong></p>\n<p>A dependency-free, themeable design system built from scratch—no Radix, no external UI frameworks. duck-ui delivers:</p>\n<ul>\n<li><strong>2× performance improvement</strong> in bundle size and runtime vs. common alternatives</li>\n<li>Compact, accessible components with modern UX patterns</li>\n<li>Composable primitives with comprehensive documentation</li>\n<li>Production-ready UI that enforces consistency across products</li>\n</ul>\n<p><strong>Tech Stack:</strong> React, TypeScript, TailwindCSS<br>\n<strong>Impact:</strong> Accelerates developer onboarding and delivers enterprise-grade UI systems</p>\n<hr>\n<h3><a href=\"https://github.com/gentleeduck/duck-ttlog\">@getnleduck/ttlog</a></h3>\n<p><strong>Production-Grade Rust Logging Engine</strong></p>\n<p>A high-performance logging system for distributed applications featuring:</p>\n<ul>\n<li><strong>Lock-free ring buffers</strong> for non-blocking ingestion</li>\n<li><strong>CBOR + LZ4</strong> compressed snapshots with atomic file writes</li>\n<li><strong>Crash-capture</strong> and post-mortem analysis without runtime impact</li>\n<li>Benchmarked at <strong>~70M events/sec</strong> peak and <strong>~16.7M buffer ops/sec</strong></li>\n</ul>\n<p><strong>Tech Stack:</strong> Rust<br>\n<strong>Use Case:</strong> Extreme throughput scenarios requiring reliable diagnostics at scale</p>\n<hr>\n<h3><a href=\"https://github.com/gentleeduck/duck-template\">@getnleduck/template</a></h3>\n<p><strong>Fast Rust-Powered Scaffolding CLI</strong></p>\n<p>A project scaffolding tool driven by structured JSON configs:</p>\n<ul>\n<li>Variant support with remote/local config sources</li>\n<li>Dynamic flag injection and modular commands</li>\n<li>Reproducible, environment-aware project layouts</li>\n<li><strong>Dramatically reduces</strong> developer setup time</li>\n</ul>\n<p><strong>Tech Stack:</strong> Rust<br>\n<strong>Purpose:</strong> Standardize bootstrapping across teams</p>\n<hr>\n<h3><a href=\"https://www.npmjs.com/package/@gentleduck/ttest\">@gentleduck/ttest</a></h3>\n<p><strong>Zero-Runtime TypeScript Type Testing</strong></p>\n<p>A compile-time type-level testing framework for TypeScript:</p>\n<ul>\n<li>Validates assignability, equality, and inference without emitted JS</li>\n<li>Clear, IDE-friendly failure messages</li>\n<li>Includes advanced type-only utilities (SQL &#x26; JSON inference/parsers)</li>\n<li>Perfect for framework authors and type-heavy codebases</li>\n</ul>\n<p><strong>Tech Stack:</strong> TypeScript<br>\n<strong>Highlight:</strong> Closes the feedback loop between complex types and application logic</p>\n<hr>\n<h3><a href=\"https://www.npmjs.com/package/@gentleduck/variants\">@gentleduck/variants</a></h3>\n<p><strong>Zero-Dependency Class Composition Utility</strong></p>\n<p>A TypeScript-first utility for declarative class-name composition:</p>\n<ul>\n<li><strong>~7× faster</strong> than reference implementations</li>\n<li>Fully type-safe with IDE autocompletion</li>\n<li>Supports default &#x26; compound variants, nested arrays, conditionals</li>\n<li>Tiny bundle footprint</li>\n</ul>\n<p><strong>Tech Stack:</strong> TypeScript<br>\n<strong>Inspired by:</strong> Tailwind/CVA</p>\n<hr>\n<h3><a href=\"https://www.npmjs.com/package/@gentleduck/vim\">@gentleduck/vim</a></h3>\n<p><strong>Framework-Agnostic Vim-Style Navigation</strong></p>\n<p>Transform any browser app into a modal, keyboard-first experience:</p>\n<ul>\n<li>Declarative keymaps with leader-key and chord support</li>\n<li>Modal editing (normal/insert/visual) with rich motion primitives</li>\n<li>Framework adapters for React/Angular/Svelte/vanilla</li>\n<li>Accessibility-friendly fallbacks</li>\n</ul>\n<p><strong>Tech Stack:</strong> TypeScript<br>\n<strong>Purpose:</strong> Add muscle-memory navigation and power-user workflows to any UI</p>\n<hr>\n<h3><a href=\"https://github.com/wildduck2/-duck-lox-rs-\">-duck-lox-rs-</a> (STILL IN DEVELOPMENT)</h3>\n<p><strong>Lox Language Interpreter in Rust</strong></p>\n<p>A tree-walk interpreter implementation of the Lox programming language:</p>\n<ul>\n<li>Built following \"Crafting Interpreters\" principles</li>\n<li>Demonstrates Rust's capabilities in language implementation</li>\n<li>Clean, educational codebase</li>\n</ul>\n<p><strong>Tech Stack:</strong> Rust</p>\n<hr>\n<h3><a href=\"https://github.com/wildduck2/email-toolkit\">@ahmedayob/email-toolkit</a></h3>\n<p><strong>MIME Message Builder Library</strong></p>\n<p>A TypeScript library for building and manipulating MIME messages:</p>\n<ul>\n<li>Easy-to-use API for creating and encoding MIME content</li>\n<li>Ideal for email and internet-based communication systems</li>\n<li>Type-safe implementation</li>\n</ul>\n<p><strong>Tech Stack:</strong> TypeScript</p>\n<hr>\n<h2>Philosophy</h2>\n<p>I believe in building tools that <strong>reduce complexity</strong> while <strong>expanding capability</strong>. Whether it's a zero-dependency component library, a crash-proof logging system, or an AI-powered operating system, my goal is to create software that empowers developers and users alike.</p>\n<p>My work focuses on:</p>\n<ul>\n<li><strong>Performance:</strong> Every millisecond matters in production</li>\n<li><strong>Developer Experience:</strong> Great tools make great products possible</li>\n<li><strong>Type Safety:</strong> Catching errors at compile time, not runtime</li>\n<li><strong>Open Source:</strong> Sharing knowledge and building in public</li>\n</ul>\n<hr>\n<p><em>\"Between the kernel and eBPF\" — Building the future of developer tools and distributed systems.</em></p>",
    "description": "Get to know more about the person behind @gentleduck.",
    "excerpt": "About Me\n\n  \n\nI'm a Senior Software Engineer specializing in building scalable, high-performance systems across the full stack. Currently at AIv, I'm engineering conversational operating systems where natural language serves as the interface for real-world act",
    "metadata": {
      "readingTime": 2,
      "wordCount": 609
    },
    "title": "whoiam",
    "toc": [
      {
        "title": "About Me",
        "url": "#about-me",
        "items": []
      },
      {
        "title": "Featured Projects",
        "url": "#featured-projects",
        "items": [
          {
            "title": "@getnleduck/ui",
            "url": "#getnleduckui",
            "items": []
          },
          {
            "title": "@getnleduck/ttlog",
            "url": "#getnleduckttlog",
            "items": []
          },
          {
            "title": "@getnleduck/template",
            "url": "#getnleducktemplate",
            "items": []
          },
          {
            "title": "@gentleduck/ttest",
            "url": "#gentleduckttest",
            "items": []
          },
          {
            "title": "@gentleduck/variants",
            "url": "#gentleduckvariants",
            "items": []
          },
          {
            "title": "@gentleduck/vim",
            "url": "#gentleduckvim",
            "items": []
          },
          {
            "title": "-duck-lox-rs- (STILL IN DEVELOPMENT)",
            "url": "#-duck-lox-rs--still-in-development",
            "items": []
          },
          {
            "title": "@ahmedayob/email-toolkit",
            "url": "#ahmedayobemail-toolkit",
            "items": []
          }
        ]
      },
      {
        "title": "Philosophy",
        "url": "#philosophy",
        "items": []
      }
    ],
    "contentType": "mdx",
    "flattenedPath": "docs",
    "permalink": "whoiam",
    "slug": "docs/whoiam",
    "sourceFileDir": "content/docs",
    "sourceFileName": "whoiam.mdx",
    "sourceFilePath": []
  }
]